# DFS(Depth-First Search)
# 깊이 우선 탐색, 그래프에서 깊은 부분을 우선적으로 탐색하는 알고리즘
# DFS는 스택 or 재귀함수를 이용함
# 1. 탐색 시작 노드를 스택에 삽입하고 방문 처리함
# 2. 스택의 최상단 노드에 방문하지 않은 인접한 노드가 하나라도 있으면 그 노드를 스택에 넣고 방문 처리함. 방문하지 않은 인접노드가 없으면 스택의 최 상단 노드를 꺼냄
# 3. 더 이상 2번의 과정을 수행할 수 없을 때까지 반복

# DFS 메서드 정의
def dfs(graph, v, visited):
    #현재 노드를 방문처리
    visited[v] = True
    print(v, end=' ')
    #현재 노드와 연결된 다른 노드를 재귀적으로 방문
    for i in graph[v]:
        if not visited[i]:
            dfs(graph, i, visited)

graph = [
    [], # 문제에서 노드의 번호가 1번부터 시작하는 경우가 많아서 0을 비워둠
    [2, 3, 8],
    [1, 7],
    [1, 4, 5],
    [3, 5],
    [3, 4],
    [7],
    [2, 6, 8],
    [1, 7]
]

# 각 노드가 방문된 정보를 표현
visited = [False] * 9 # 노드 0번 사용하지 않기 위해 8보다 하나 더 크게

# dfs 함수 호출
dfs(graph, 1, visited)